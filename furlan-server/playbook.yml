- name: Furlan Server Provision
  hosts: servers
  become: true
  tasks:
    - name: Ping my hosts
      ansible.builtin.ping:

    - name: Install firewall
      ansible.builtin.apt:
        pkg: "ufw"
        state: "present"
        update_cache: true

    - name: Setup unattended upgrades
      ansible.builtin.apt:
        pkg: "unattended-upgrades"
        state: "present"

    - name: "Create apt file that would be made by interactive dpkg-reconfigure"
      file:
        path: "/etc/apt/apt.conf.d/20auto-upgrades"
        owner: "root"
        group: "root"
        mode: "0644"
        state: "touch"
    - name: "Populate 20auto-upgrades apt file"
      lineinfile:
        dest: "/etc/apt/apt.conf.d/20auto-upgrades"
        line: "{{item}}"
      with_items:
        - 'APT::Periodic::Update-Package-Lists "1";'
        - 'APT::Periodic::Unattended-Upgrade "1";'

    # ref. https://help.ubuntu.com/community/Lubuntu/Documentation/RemoveOldKernels#Shell
    - name: "Enable remove unused deps in /etc/apt/apt.conf.d/50unattended-upgrades"
      lineinfile:
        dest: "/etc/apt/apt.conf.d/50unattended-upgrades"
        line: 'Unattended-Upgrade::Remove-Unused-Dependencies "true";'
        insertafter: "^//Unattended-Upgrade::Remove-Unused-Dependencies"

    - name: Install apt-transport-https
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - lsb-release
          - gnupg
        state: latest

    - name: Add sygning key
      ansible.builtin.apt_key:
        url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
        state: present
    - name: Add repository into sources list
      ansible.builtin.apt_repository:
        repo: "deb [arch={{ ansible_architecture }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
        state: present
        filename: docker

    - name: Install Docker
      ansible.builtin.apt:
        name:
          - docker
          - docker.io
          - docker-compose
          - docker-registry
        state: latest
        update_cache: true

    - name: Create portainer container
      docker_container:
        name: portainer
        image: portainer/portainer-ee
        state: started
        recreate: yes
        restart_policy: always
        published_ports:
          - "8000:8000"
          - "9000:9000"
          - "9443:9443"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - portainer_data:/data

    - name: Create Home Assistant container
      docker_container:
        name: home-assistant
        image: ghcr.io/home-assistant/home-assistant:stable
        state: started
        recreate: yes
        restart_policy: unless-stopped
        published_ports:
          - "8123:8123"
        volumes:
          - home-assistant.config:/config


    # FIREWALL SETUP


    - name: Open Portainer port
      ufw:
        state: enabled
        rule: allow
        port: "9000"
        proto: tcp

    - name: Open SSH port
      ufw:
        state: enabled
        rule: allow
        port: "22"
        proto: tcp

    - name: Open Home Assistant port
      ufw:
        state: enabeld
        rule: allow
        port: "8123"
        proto: tcp

    - name: APT autoclean
      ansible.builtin.apt:
        autoclean: yes

    - name: APT autoremove
      ansible.builtin.apt:
        autoremove: yes
